#include "Lebedev.hpp"

namespace tcscf::integration::internal
{
  
static constexpr double lebedev3[ 6 ][ 3 ] = {
  {   0.000000000000000,    90.000000000000000,     0.166666666666667 },
  { 180.000000000000000,    90.000000000000000,     0.166666666666667 },
  {  90.000000000000000,    90.000000000000000,     0.166666666666667 },
  { -90.000000000000000,    90.000000000000000,     0.166666666666667 },
  {  90.000000000000000,     0.000000000000000,     0.166666666666667 },
  {  90.000000000000000,   180.000000000000000,     0.166666666666667 }
};

static constexpr double lebedev5[ 14 ][ 3 ] = {
  {    0.000000000000000,    90.000000000000000,     0.066666666666667  },
  {  180.000000000000000,    90.000000000000000,     0.066666666666667  },
  {   90.000000000000000,    90.000000000000000,     0.066666666666667  },
  {  -90.000000000000000,    90.000000000000000,     0.066666666666667  },
  {   90.000000000000000,     0.000000000000000,     0.066666666666667  },
  {   90.000000000000000,   180.000000000000000,     0.066666666666667  },
  {   45.000000000000000,    54.735610317245346,     0.075000000000000  },
  {   45.000000000000000,   125.264389682754654,     0.075000000000000  },
  {  -45.000000000000000,    54.735610317245346,     0.075000000000000  },
  {  -45.000000000000000,   125.264389682754654,     0.075000000000000  },
  {  135.000000000000000,    54.735610317245346,     0.075000000000000  },
  {  135.000000000000000,   125.264389682754654,     0.075000000000000  },
  { -135.000000000000000,    54.735610317245346,     0.075000000000000  },
  { -135.000000000000000,   125.264389682754654,     0.075000000000000  }
};

static constexpr double lebedev7[ 26 ][ 3 ] = {
  {    0.000000000000000,    90.000000000000000,     0.047619047619048 },
  {  180.000000000000000,    90.000000000000000,     0.047619047619048 },
  {   90.000000000000000,    90.000000000000000,     0.047619047619048 },
  {  -90.000000000000000,    90.000000000000000,     0.047619047619048 },
  {   90.000000000000000,     0.000000000000000,     0.047619047619048 },
  {   90.000000000000000,   180.000000000000000,     0.047619047619048 },
  {   90.000000000000000,    45.000000000000000,     0.038095238095238 },
  {   90.000000000000000,   135.000000000000000,     0.038095238095238 },
  {  -90.000000000000000,    45.000000000000000,     0.038095238095238 },
  {  -90.000000000000000,   135.000000000000000,     0.038095238095238 },
  {    0.000000000000000,    45.000000000000000,     0.038095238095238 },
  {    0.000000000000000,   135.000000000000000,     0.038095238095238 },
  {  180.000000000000000,    45.000000000000000,     0.038095238095238 },
  {  180.000000000000000,   135.000000000000000,     0.038095238095238 },
  {   45.000000000000000,    90.000000000000000,     0.038095238095238 },
  {  -45.000000000000000,    90.000000000000000,     0.038095238095238 },
  {  135.000000000000000,    90.000000000000000,     0.038095238095238 },
  { -135.000000000000000,    90.000000000000000,     0.038095238095238 },
  {   45.000000000000000,    54.735610317245346,     0.032142857142857 },
  {   45.000000000000000,   125.264389682754654,     0.032142857142857 },
  {  -45.000000000000000,    54.735610317245346,     0.032142857142857 },
  {  -45.000000000000000,   125.264389682754654,     0.032142857142857 },
  {  135.000000000000000,    54.735610317245346,     0.032142857142857 },
  {  135.000000000000000,   125.264389682754654,     0.032142857142857 },
  { -135.000000000000000,    54.735610317245346,     0.032142857142857 },
  { -135.000000000000000,   125.264389682754654,     0.032142857142857 }
};

template< typename REAL, int ORDER >
Array2d< REAL > convertLebedevData( double const ( &data )[ ORDER ][ 3 ] )
{
  Array2d< REAL > array( 3, ORDER );

  for( IndexType i = 0; i < ORDER; ++i )
  {
    array( 0, i ) = data[ i ][ 1 ] * ( pi< double > / 180 );
    array( 1, i ) = data[ i ][ 0 ] * ( pi< double > / 180 );
    array( 2, i ) = 4 * pi< double > * data[ i ][ 2 ];
  }

  return array;
}

template< typename REAL >
ArrayView2d< REAL const > getLebedevGrid( int const order )
{
  if( order == 3 )
  {
    static Array2d< REAL > data;
    if( data.size() == 0 )
    {
      data = convertLebedevData< REAL >( lebedev3 );
    }

    return data.toViewConst();
  }
  if( order == 5 )
  {
    static Array2d< REAL > data;
    if( data.size() == 0 )
    {
      data = convertLebedevData< REAL >( lebedev5 );
    }

    return data.toViewConst();
  }
  if( order == 7 )
  {
    static Array2d< REAL > data;
    if( data.size() == 0 )
    {
      data = convertLebedevData< REAL >( lebedev7 );
    }

    return data.toViewConst();
  }

  LVARRAY_ERROR( "Order " << order << " not supported. Supported orders are:" <<
                 "\t { 3, 5, 7 }" );

  return {};
}

// Explicit instantiations.

template ArrayView2d< float const > getLebedevGrid< float >( int const order );
template ArrayView2d< double const > getLebedevGrid< double >( int const order );

} // namespace tcscf::integration::internal